cmake_minimum_required(VERSION 2.8)
project(lora-opcua-server C)

set (MBEDTLS_MODULE_PATH ${CMAKE_CURRENT_SOURCE_DIR}/..)
set (MBEDTLS_MODULE_NAME "mbedtls")

string( TOUPPER ${MBEDTLS_MODULE_NAME} MODULE_NAME_UPPER )

if ( NOT TARGET ${MBEDTLS_MODULE_NAME} )
  message( STATUS "Adding subdirectory ${MBEDTLS_MODULE_PATH}/${MBEDTLS_MODULE_NAME} as subdirectory ${CMAKE_CURRENT_LIST_DIR}/staging/${MBEDTLS_MODULE_NAME}." )
  add_subdirectory(${MBEDTLS_MODULE_PATH}/${MBEDTLS_MODULE_NAME} staging/${MBEDTLS_MODULE_NAME})
endif()
set( ${MODULE_NAME_UPPER}_INCLUDE_DIR "${MBEDTLS_MODULE_PATH}/${MBEDTLS_MODULE_NAME}/include/${MBEDTLS_MODULE_NAME}" CACHE STRING "${MBEDTLS_MODULE_NAME} include path" FORCE )
set( ${MODULE_NAME_UPPER}_LIB_DIR "${CMAKE_CURRENT_BINARY_DIR}" CACHE STRING "${MBEDTLS_MODULE_NAME} library path" FORCE )
set( ${MODULE_NAME_UPPER}_LIB_NAME "${MBEDTLS_MODULE_NAME}" CACHE STRING "${MBEDTLS_MODULE_NAME} library name" FORCE )

message( STATUS "${MODULE_NAME_UPPER}_INCLUDE_DIR: ${${MODULE_NAME_UPPER}_INCLUDE_DIR}")
message( STATUS "${MODULE_NAME_UPPER}_LIB_DIR: ${${MODULE_NAME_UPPER}_LIB_DIR}")
message( STATUS "${MODULE_NAME_UPPER}_LIB_NAME: ${${MODULE_NAME_UPPER}_LIB_NAME}")

include_directories(${MBEDTLS_INCLUDE_DIR})

aux_source_directory(src SRC_LIST)
set (EXE_NAME lora-opcua-server)

link_directories(${MBEDTLS_LIB_DIR})

add_executable(${EXE_NAME} ${SRC_LIST})
target_link_libraries(${EXE_NAME} ${MBEDTLS_LIB_NAME})
target_compile_options(${EXE_NAME} PRIVATE "-std=c++11")
